spring.application.name=studio

# AI Configuration
ai.output.dir=src/main/resources/static/generated

# Python scripts configuration
python.generate_clothing_script=src/main/resources/python/generate_clothing.py
python.script.path=src/main/resources/python/generate_clothing.py

# File upload settings
file.upload-dir=static/uploads/
file.generated-dir=static/generated/

# Database Configuration for (Render Deployment)
spring.profiles.active=prod
spring.datasource.url=jdbc:postgresql://dpg-cvudalbe5dus73cjfbq0-a.oregon-postgres.render.com:5432/fashion_studio_db
spring.datasource.username=fashion_studio_db_user
spring.datasource.password=tzXkeI8fTqy320jfIuL8PQGZ6Qhw35VU
spring.datasource.driver-class-name=org.postgresql.Driver

## Database Configuration (Railway Deployment)
# spring.profiles.active = prod
# spring.datasource.url=jdbc:postgresql://postgres.railway.internal:5432/railway
# spring.datasource.username=postgres
# spring.datasource.password=XWpRVHuvnBCwxwGjLSyCGcluOWucGXGp
# # Ensure the correct driver class name is set
# spring.datasource.driver-class-name=org.postgresql.Driver

# HikariCP settings to manage database connections efficiently
# spring.datasource.hikari.maximum-pool-size=10
# spring.datasource.hikari.minimum-idle=2
# spring.datasource.hikari.idle-timeout=30000
# spring.datasource.hikari.connection-timeout=20000
# spring.datasource.hikari.max-lifetime=1800000

# Port setup for Render (uses PORT env variable if available, else defaults to 8080)
server.port=${PORT:8080}
